let conf = require("../configure");

//默认 dev 模式
let configure = conf[process.argv[2] || "dev"];

if(!configure){
    throw new Error(`${process.argv[2] || "没有配置参数."} 读取不到这个配置`);
    process.exit();
}

//将配置信息设为全局变量
global.configure = configure;

//启动服务
let app = require("../app"),
    http = require("http");

/**
 * Create HTTP server.
 */
let server = http.createServer(app.callback()),
    port = configure.port || 3000;

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log(`已启动 端口: ${bind}`);
}